{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","contentToShow","tabs","selectedTabId","onTabSelected","checkedSelectedTabId","some","id","className","map","tab","title","content","isSelected","classNames","href","onClick","event","preventDefault","App","useState","setSelectedTabId","selectedTitle","find","ReactDOM","render","document","getElementById"],"mappings":"8LAWaA,EAAwB,SAAC,GAI/B,IAKDC,EARJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAuBH,EAAKI,MAAK,qBAAGC,KAAgBJ,KACtDA,EACAD,EAAK,GAAGK,GAIZ,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAAAC,GACR,IAAQH,EAAuBG,EAAvBH,GAAII,EAAmBD,EAAnBC,MAAOC,EAAYF,EAAZE,QACbC,EAAaR,IAAyBE,EAM5C,OAJIM,IACFZ,EAAgBW,GAIhB,oBAEEJ,UAAWM,IACT,CAAE,YAAaD,IAEjB,UAAQ,MALV,SAOE,mBACEE,KAAI,WAAMR,GACV,UAAQ,UACRS,QAAS,SAACC,GACRA,EAAMC,iBAEDL,GACHT,EAAcM,IAPpB,SAWGC,KAjBEJ,UAyBf,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGP,QCrDIC,G,kBAAc,CACzB,CAAEK,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,iBAG7BO,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAASlB,EAAK,GAAGK,IAA3D,mBAAOJ,EAAP,KAAsBkB,EAAtB,KAMMC,EAAa,UAAGpB,EAAKqB,MAAK,qBAAGhB,KAAgBJ,YAAhC,aAAG,EAA6CQ,MAEnE,OACE,sBAAKH,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,SAEIc,EAAa,0BAEUA,GAGnB,8BAKR,cAAC,EAAD,CACEpB,KAAMA,EACNC,cAAeA,EACfC,cAvBY,SAACM,GACjBW,EAAiBX,EAAIH,WChBzBiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.74d0dc2c.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected(tab: Tab): void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const checkedSelectedTabId = tabs.some(({ id }) => id === selectedTabId)\n    ? selectedTabId\n    : tabs[0].id;\n\n  let contentToShow;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title, content } = tab;\n            const isSelected = checkedSelectedTabId === id;\n\n            if (isSelected) {\n              contentToShow = content;\n            }\n\n            return (\n              <li\n                key={id}\n                className={classNames(\n                  { 'is-active': isSelected },\n                )}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={(event) => {\n                    event.preventDefault();\n\n                    if (!isSelected) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {contentToShow}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { Tab } from './types/Tab';\nimport { Tabs } from './components/Tabs';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const selectTab = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  const selectedTitle = tabs.find(({ id }) => id === selectedTabId)?.title;\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {\n          selectedTitle\n            ? (\n              `Selected tab is ${selectedTitle}`\n            )\n            : (\n              'There is no selected tab.'\n            )\n        }\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={selectTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}